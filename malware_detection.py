import pandas as pd
import hashlib
import webbrowser

def load_dataset(csv_file):
    return pd.read_csv(csv_file)

def calculate_hash(file_content, algorithm='sha256'):
    hash_func = hashlib.new(algorithm)
    hash_func.update(file_content)
    return hash_func.hexdigest()

def scan_file(file_content):
    try:
        return calculate_hash(file_content)
    except Exception as e:
        print(f"Error scanning file: {str(e)}")
        return None

def compare_hashes(csv_data, scanned_hash, hash_column='hash'):
    matches = []
    if hash_column not in csv_data.columns:
        print(f"Error: '{hash_column}' column not found in CSV data.")
        return matches

    for index, row in csv_data.iterrows():
        if row[hash_column] == scanned_hash:
            matches.append((row[hash_column], row['Description']))
    return matches

def generate_report(matches):
    with open('result.txt', 'w') as f:
        if matches:
            f.write("Malware Found:\n")
            for i, match in enumerate(matches, start=1):
                f.write(f"{i}. Hash: {match[0]}, Description: {match[1]}\n")
        else:
            f.write("Malware Not Found.")
